<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

global.xc = room_width/2;
global.yc = room_height/2;

currentLayer = 1;
var numberOfPlatforms = 50;
var gap = 32;
var reverse = 0;
var clockwise = true;
var minx, miny, maxx, maxy, xx, yy, dir;

with(instance_create(global.xc, global.yc, obj_platform)){
    layer = 0;
}

for (var i=0; i&lt;numberOfPlatforms; i++){
    minx = global.xc-(gap*i);
    miny = global.yc-(gap*i);
    maxx = global.xc+(gap*i);
    maxy = global.yc+(gap*i);
    
    var repeatCreate = irandom_range(1, ceil((currentLayer*currentLayer)/8));
    var rotationDirection = 180*reverse;//choose(0, 180);
    
    repeat(repeatCreate){        
        // Flip a coin
        if (choose(0, 1) == 0){
            // Bind to left/right
            xx = choose(minx, maxx);
            yy = irandom_range(miny, maxy);
            dir = 90+rotationDirection;
            if (xx == minx)clockwise = (dir == 90); else
            if (xx == maxx)clockwise = (dir == 270);
            if (reverse)clockwise = !clockwise;
        } else {
            // Bind to up/down
            xx = irandom_range(minx, maxx);
            yy = choose(miny, maxy);
            dir = rotationDirection;
            if (yy == miny)clockwise = (dir == 0); else
            if (yy == maxy)clockwise = (dir == 180); 
            if (reverse)clockwise = !clockwise;
        }
        
        var p = instance_create(xx, yy, obj_platform);
        p.layer = currentLayer;
        p.clockwise = clockwise;
        p.direction = dir;
        p.speed = ceil(random(0.5) + (currentLayer/12));
    }
    
    currentLayer++;
    reverse = !reverse;
}

instance_create(global.xc, global.yc, obj_player);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restart game

game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
